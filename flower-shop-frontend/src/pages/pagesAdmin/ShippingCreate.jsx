import React, { useEffect, useState } from "react";
import orderApi from "../../api/orderApi";
import { createShipping } from "../../api/shippingApi";
import { useNavigate } from "react-router-dom";

const ShippingCreate = () => {
  const [orders, setOrders] = useState([]);
  const [formData, setFormData] = useState({
    orderId: "",
    carrier: "",
    trackingNumber: "",
    status: "pending",
    estimatedDelivery: "",
    actualDelivery: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    const fetchOrders = async () => {
      try {
        const res = await orderApi.getOrders();
        console.log("res from getOrders:", res); // üëà Xem th·ª≠ d·ªØ li·ªáu v·ªÅ
        setOrders(res.data); // üëà res.data l√† 1 array c√°c ƒë∆°n h√†ng
      } catch (error) {
        console.error("L·ªói khi l·∫•y danh s√°ch ƒë∆°n h√†ng:", error);
      }
    };

    fetchOrders();
  }, []);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await createShipping(formData);
      alert("T·∫°o th√¥ng tin v·∫≠n chuy·ªÉn th√†nh c√¥ng");
      navigate("/admin/shipping"); // üëà quay l·∫°i trang danh s√°ch
    } catch (error) {
      console.error("L·ªói khi t·∫°o shipping:", error);
      alert("T·∫°o th·∫•t b·∫°i");
    }
  };

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold mb-4">T·∫°o th√¥ng tin v·∫≠n chuy·ªÉn</h2>
      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label>Ch·ªçn ƒë∆°n h√†ng:</label>
          <select
            name="orderId"
            value={formData.orderId}
            onChange={handleChange}
            className="border p-2 w-full"
            required
          >
            <option value="">-- Ch·ªçn ƒë∆°n h√†ng --</option>
            {orders.map((order) => (
              <option key={order._id} value={order._id}>
                {order._id} - {order.status} - {order.totalAmount}ƒë
              </option>
            ))}
          </select>
        </div>

        <div>
          <label>H√£ng v·∫≠n chuy·ªÉn:</label>
          <input
            type="text"
            name="carrier"
            value={formData.carrier}
            onChange={handleChange}
            className="border p-2 w-full"
            required
          />
        </div>

        <div>
          <label>M√£ theo d√µi:</label>
          <input
            type="text"
            name="trackingNumber"
            value={formData.trackingNumber}
            onChange={handleChange}
            className="border p-2 w-full"
          />
        </div>

        <div>
          <label>Tr·∫°ng th√°i:</label>
          <select
            name="status"
            value={formData.status}
            onChange={handleChange}
            className="border p-2 w-full"
          >
            <option value="pending">Pending</option>
            <option value="in_transit">In Transit</option>
            <option value="delivered">Delivered</option>
          </select>
        </div>

        <div>
          <label>Ng√†y giao d·ª± ki·∫øn:</label>
          <input
            type="date"
            name="estimatedDelivery"
            value={formData.estimatedDelivery}
            onChange={handleChange}
            className="border p-2 w-full"
          />
        </div>

        <div>
          <label>Ng√†y giao th·ª±c t·∫ø:</label>
          <input
            type="date"
            name="actualDelivery"
            value={formData.actualDelivery}
            onChange={handleChange}
            className="border p-2 w-full"
          />
        </div>

        <button
          type="submit"
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          T·∫°o
        </button>
      </form>
    </div>
  );
};

export default ShippingCreate;
